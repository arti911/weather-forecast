{"version":3,"sources":["assets/calendar.png","context.tsx","components/Spin/index.tsx","assets/icons/wind.js","assets/icons/cloud.js","assets/icons/drop.js","components/WeatherSheetItem/index.tsx","components/NoForecast/index.tsx","components/WeatherSheet/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","DateContext","createContext","Date","Spin","className","Wind","id","viewBox","xmlns","d","Cloud","version","x","y","Drop","WeatherSheetItem","props","dt_txt","get","temp","feels_like","weather","speed","clouds","pop","determineTemperature","toFixed","map","item","key","description","moment","format","Number","NoForecast","date","useContext","src","calendar","alt","WeatherSheet","weatherForDay","length","data","dt","App","useState","city","setCity","time","setTime","setWeatherForDay","currentDate","securrentDate","loading","setLoading","useEffect","setInterval","useLayoutEffect","a","fetch","ok","json","list","temperatureForDay","filter","getWather","Provider","value","style","maxWidth","margin","DatePicker","getSelectedDay","selectDate","labelFormat","endDate","color","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3434571e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calendar.9f6dd7fc.png\";","import { createContext } from \"react\"\r\n\r\nexport const DateContext = createContext<Date>(new Date())","import React from \"react\"\r\n\r\nimport \"./Spin.css\"\r\n\r\nconst Spin: React.FC = () => (\r\n    <div className={\"loader\"}>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n    </div>\r\n)\r\n\r\nexport default Spin","import React from \"react\"\r\n\r\nconst Wind = () => <svg id=\"Capa_1\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m496.217 381.033h-24.851c-22.405 0-40.633 18.228-40.633 40.633v30.027l-14.37 14.37c-2.929 2.929-2.929 7.678 0 10.606 1.465 1.464 3.385 2.197 5.304 2.197s3.839-.732 5.304-2.197l14.37-14.37h30.026c22.405 0 40.634-18.228 40.634-40.633v-24.85c-.001-8.702-7.081-15.783-15.784-15.783zm.783 40.634c0 14.134-11.499 25.633-25.634 25.633h-15.026l20.33-20.33c2.929-2.929 2.929-7.678 0-10.606-2.93-2.929-7.678-2.929-10.607 0l-20.329 20.329v-15.026c0-14.134 11.499-25.633 25.633-25.633h24.851c.432 0 .783.352.783.784v24.849z\" /><path d=\"m24.066 130.967c1.919 0 3.839-.732 5.304-2.197l14.37-14.37h30.026c22.405 0 40.634-18.228 40.634-40.633v-24.85c0-8.703-7.081-15.783-15.784-15.783h-24.85c-22.405 0-40.633 18.228-40.633 40.633v30.026l-14.371 14.371c-2.929 2.929-2.929 7.678 0 10.606 1.466 1.464 3.385 2.197 5.304 2.197zm24.068-57.2c0-14.134 11.499-25.633 25.633-25.633h24.85c.433 0 .784.352.784.783v24.85c-.001 14.134-11.5 25.633-25.634 25.633h-15.027l20.33-20.33c2.929-2.929 2.929-7.678 0-10.606-2.93-2.929-7.678-2.929-10.607 0l-20.329 20.329z\" /><path d=\"m173.167 147.533c4.143 0 7.5-3.358 7.5-7.5 0-23.269 18.931-42.2 42.199-42.2 23.27 0 42.2 18.931 42.2 42.2s-18.931 42.2-42.2 42.2h-198.8c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h198.8c31.54 0 57.2-25.66 57.2-57.2s-25.66-57.2-57.2-57.2-57.199 25.66-57.199 57.2c0 4.142 3.357 7.5 7.5 7.5z\" /><path d=\"m7.5 263.5h414.167c49.81 0 90.333-40.523 90.333-90.333s-40.523-90.333-90.333-90.333c-49.811 0-90.334 40.523-90.334 90.333 0 4.142 3.357 7.5 7.5 7.5s7.5-3.358 7.5-7.5c0-41.539 33.795-75.333 75.334-75.333s75.333 33.794 75.333 75.333-33.794 75.333-75.333 75.333h-414.167c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5z\" /><path d=\"m338.833 314.767h-232.969c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h232.969c23.27 0 42.2 18.931 42.2 42.2s-18.931 42.2-42.2 42.2c-23.268 0-42.199-18.931-42.199-42.2 0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5c0 31.54 25.659 57.2 57.199 57.2s57.2-25.66 57.2-57.2c0-31.541-25.66-57.2-57.2-57.2z\" /><path d=\"m82.302 322.267c0-4.142-3.358-7.5-7.5-7.5h-67.302c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h67.302c4.142 0 7.5-3.358 7.5-7.5z\" /><path d=\"m107.936 381.033h-50.736c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h50.735c4.143 0 7.5-3.358 7.5-7.5.001-4.142-3.357-7.5-7.499-7.5z\" /><path d=\"m239.434 381.033h-100.436c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h100.436c4.143 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5z\" /></g></svg>\r\n\r\nexport default Wind","import React from \"react\"\r\n\r\nconst Cloud = () => (\r\n\t<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 480.236 480.236\">\r\n\t\t<path d=\"M479.886,295.684c-4.407-54.062-49.622-95.658-103.863-95.551c-8.127-0.014-16.228,0.926-24.136,2.8\r\n\t\t\tc-2.552-46.414-35.404-85.587-80.664-96.184c-0.728-0.176-1.464-0.32-2.192-0.464c-20.771-33.768-64.984-44.304-98.753-23.533\r\n\t\t\tc-15.773,9.702-27.187,25.125-31.855,43.045c-32.24-14.554-70.174-0.216-84.728,32.024c-3.733,8.27-5.667,17.239-5.672,26.312\r\n\t\t\tc-0.001,2.841,0.183,5.679,0.552,8.496c-30.596,4.038-52.126,32.114-48.089,62.711c1.699,12.871,7.826,24.748,17.329,33.593\r\n\t\t\tc-0.968,1.112-1.968,2.208-2.848,3.376c-9.725,12.535-14.984,27.959-14.944,43.824c0.044,39.746,32.254,71.956,72,72h304\r\n\t\t\tc2.968,0,5.848-0.088,8.656-0.344C441.927,403.124,484.553,352.932,479.886,295.684z M26.129,221.604\r\n\t\t\tc7.582-8.556,18.462-13.458,29.894-13.47h0.624c0.266-0.015,0.534-0.015,0.8,0c2.667,0.305,5.308-0.761,7.016-2.832\r\n\t\t\tc1.71-2.058,2.277-4.836,1.512-7.4c-1.307-4.472-1.964-9.109-1.952-13.768c0.026-26.499,21.501-47.974,48-48\r\n\t\t\tc9.913-0.056,19.591,3.024,27.648,8.8c3.587,2.579,8.586,1.761,11.165-1.826c0.841-1.17,1.351-2.546,1.475-3.982\r\n\t\t\tc2.821-30.089,28.903-52.58,59.08-50.944c13.49,0.771,26.233,6.444,35.832,15.952c-0.504,0-0.992,0.08-1.496,0.088h-0.32\r\n\t\t\tc-3.719,0.099-7.431,0.393-11.12,0.88l-0.432,0.072c-3.604,0.486-7.18,1.164-10.712,2.032l-0.592,0.152\r\n\t\t\tc-3.411,0.852-6.775,1.88-10.08,3.08l-0.928,0.336c-3.12,1.168-6.173,2.483-9.16,3.944c-0.464,0.224-0.928,0.432-1.384,0.664\r\n\t\t\tc-2.768,1.408-5.464,2.952-8.104,4.608c-0.6,0.368-1.208,0.712-1.792,1.088c-2.48,1.6-4.88,3.392-7.2,5.24\r\n\t\t\tc-0.632,0.496-1.288,0.936-1.912,1.448c-2.888,2.365-5.649,4.88-8.272,7.536c-6.617,6.677-12.243,14.269-16.704,22.544v-0.048\r\n\t\t\tl-0.064,0.096c-0.24,0.372-0.452,0.763-0.632,1.168c-3.403,6.275-6.122,12.897-8.112,19.752\r\n\t\t\tc-1.722,5.935-2.908,12.013-3.544,18.16c-0.446,3.703-0.66,7.43-0.64,11.16c0,0.536,0,1.072,0,1.6\r\n\t\t\tc-17.084-3.419-34.815-1.227-50.552,6.248c-3.447,1.687-6.777,3.604-9.968,5.736c-1.901,1.226-3.711,2.587-5.416,4.072\r\n\t\t\tc-3.011,2.367-5.84,4.955-8.464,7.744c-2.589,2.714-4.964,5.624-7.104,8.704c-5.353,7.614-9.328,16.108-11.744,25.096\r\n\t\t\tc-3.514,1.066-6.929,2.434-10.208,4.088c-3.474,1.74-6.807,3.749-9.968,6.008c-0.336,0.232-0.736,0.4-1.064,0.64\r\n\t\t\tC13.002,263.418,11.477,238.137,26.129,221.604z M383.287,391.846c-2.4,0.224-4.8,0.288-7.264,0.288h-304\r\n\t\t\tc-30.913-0.035-55.965-25.087-56-56c-0.026-12.363,4.08-24.38,11.664-34.144c2.168-2.845,4.624-5.459,7.328-7.8\r\n\t\t\tc3.841-3.377,8.12-6.221,12.72-8.456c3.689-1.837,7.583-3.23,11.6-4.152c3.019-0.73,5.342-3.141,5.96-6.184\r\n\t\t\tc1.749-8.602,5.254-16.751,10.296-23.936c1.685-2.443,3.558-4.751,5.6-6.904c2.233-2.361,4.64-4.551,7.2-6.552\r\n\t\t\tc1.263-1.086,2.599-2.083,4-2.984c2.56-1.721,5.233-3.268,8-4.632c2.027-0.953,4.102-1.802,6.216-2.544\r\n\t\t\tc1.536-0.544,3.104-0.976,4.68-1.4c0.528-0.144,1.04-0.32,1.6-0.448c1.68-0.408,3.376-0.712,5.072-0.984\r\n\t\t\tc0.48-0.072,0.96-0.176,1.44-0.24c1.528-0.208,3.064-0.328,4.6-0.424c0.8-0.048,1.536-0.112,2.312-0.128\r\n\t\t\tc1.504-0.048,2.992,0,4.48,0c0.536,0,1.072,0,1.6,0.072c1.496,0.096,2.968,0.264,4.432,0.464c0.552,0.072,1.112,0.128,1.656,0.216\r\n\t\t\tc1.504,0.248,2.992,0.584,4.464,0.944c0.464,0.112,0.936,0.192,1.4,0.312c1.897,0.509,3.766,1.115,5.6,1.816\r\n\t\t\tc4.122,1.591,8.753-0.46,10.344-4.582c0.487-1.26,0.646-2.624,0.464-3.962c-0.504-3.768-0.747-7.566-0.728-11.368\r\n\t\t\tc-0.018-3.104,0.153-6.205,0.512-9.288c0.545-5.249,1.551-10.44,3.008-15.512c1.72-5.938,4.094-11.667,7.08-17.08\r\n\t\t\tc0.056-0.104,0.112-0.208,0.16-0.312c0.048-0.104,0.192-0.336,0.28-0.512c3.749-6.938,8.475-13.301,14.032-18.896\r\n\t\t\tc16.539-16.954,39.244-26.479,62.928-26.4c2.664,0,5.32,0.152,7.888,0.36c2.296,0.224,4.528,0.504,6.744,0.936l0.456,0.072\r\n\t\t\tc1.514,0.19,3.017,0.457,4.504,0.8c39.921,9.328,68.221,44.836,68.408,85.832c0,1.728-0.08,3.456-0.152,5.176\r\n\t\t\tc-0.191,4.414,3.233,8.147,7.647,8.338c1.04,0.045,2.078-0.113,3.057-0.466c9.45-3.376,19.414-5.084,29.448-5.048\r\n\t\t\tc48.601-0.084,88.068,39.247,88.152,87.848C464.254,349.884,429.039,388.136,383.287,391.846z\"/>\r\n</svg>\r\n)\r\n\r\nexport default Cloud","import React from \"react\"\r\n\r\nconst Drop = () => (\r\n\t<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 514.8 514.8\">\r\n\t\t<path d=\"M405.962,47.612c-7.037,0-13.674,1.597-19.688,4.312c-12.021-23.963-36.749-40.459-65.389-40.459\r\n\t\tc-18.628,0-35.582,7.019-48.501,18.484C250.658,11.398,221.961,0,190.396,0C123.573,0,69.344,50.614,67.967,113.517\r\n\t\tc-25.054,11.628-42.458,36.93-42.458,66.354c0,34.004,23.228,62.52,54.669,70.724l338.579,2.324\r\n\t\tc39.178-1.405,70.533-33.526,70.533-73.048c0-28.219-15.988-52.661-39.388-64.872c2.61-5.929,4.121-12.441,4.121-19.335\r\n\t\tC454.024,69.127,432.508,47.612,405.962,47.612z\"/>\r\n\t\t<path d=\"M141.818,372.364c8.501-16.438,9.524-91.36,9.524-91.36s-60.55,44.141-69.051,60.578\r\n\t\tc-8.501,16.438-2.065,36.653,14.373,45.154C113.102,395.237,133.317,388.802,141.818,372.364z\"/>\r\n\t\t<path d=\"M266.13,372.364c8.501-16.438,9.524-91.36,9.524-91.36s-60.55,44.141-69.051,60.578\r\n\t\tc-8.501,16.438-2.065,36.653,14.372,45.154C237.414,395.237,257.629,388.802,266.13,372.364z\"/>\r\n\t\t<path d=\"M354.861,386.736c16.438,8.501,36.653,2.065,45.154-14.372c8.501-16.438,9.524-91.36,9.524-91.36\r\n\t\ts-60.55,44.141-69.051,60.578C331.988,358.021,338.423,378.235,354.861,386.736z\"/>\r\n\t\t<path d=\"M125.361,511.049c16.438,8.501,36.653,2.065,45.154-14.372c8.501-16.438,9.524-91.36,9.524-91.36\r\n\t\ts-60.549,44.141-69.051,60.578C102.487,482.333,108.923,502.548,125.361,511.049z\"/>\r\n\t\t<path d=\"M249.673,511.049c16.438,8.501,36.653,2.065,45.154-14.372c8.501-16.438,9.524-91.36,9.524-91.36\r\n\t\ts-60.55,44.141-69.051,60.578C226.8,482.333,233.235,502.548,249.673,511.049z\"/>\r\n\t</svg>\r\n)\r\n\r\nexport default Drop\r\n","import React from \"react\"\r\nimport moment from \"moment\"\r\nimport { get } from \"lodash\"\r\n\r\nimport Wind from \"../../assets/icons/wind\"\r\nimport Cloud from \"../../assets/icons/cloud\"\r\nimport Drop from \"../../assets/icons/drop\"\r\n\r\nimport { IWeatherSheetItemProps } from \"../../interfaces\"\r\nimport { TWeather } from \"../../types\";\r\n\r\nconst WeatherSheetItem: React.FC<IWeatherSheetItemProps> = props => {\r\n  let dt_txt: string = get(props, \"data.dt_txt\", \"\")\r\n  const temp: number = get(props, \"data.main.temp\", 0)\r\n  const feels_like: number = get(props, \"data.main.feels_like\", 0)\r\n  const weather: Array<TWeather> = get(props, \"data.weather\", [])\r\n  const speed: number = get(props, \"data.wind.speed\", 0)\r\n  const clouds: number = get(props, \"data.clouds.all\", 0)\r\n  const pop: number = get(props, \"data.pop\", 0)\r\n\r\n  const determineTemperature = (temp: number): (number | string) => (temp > 0 ? `+${temp.toFixed(0)}` : temp.toFixed(0));\r\n\r\n  return (\r\n    <div className={\"weather-sheet__item\"} >\r\n      <div className={\"weather-sheet__basic\"}>\r\n        <div className={\"weather-sheet__temp-value weather-sheet__inline\"}>{determineTemperature(temp)}&#176;</div>\r\n        <div className={\"weather-sheet__feelings weather-sheet__inline\"}>\r\n          {weather.map((item: TWeather) => (\r\n            <div className={\"weather-sheet__condition\"} key={item.id}>\r\n              {item.description}\r\n            </div>\r\n          ))}\r\n          <div>\r\n            Ощущается как {determineTemperature(feels_like)}&#176;\r\n                </div>\r\n        </div>\r\n      </div>\r\n      <div className={\"weather-sheet__props\"}>\r\n        <div className={\"weather-sheet__props-item\"}>\r\n          <Wind />\r\n          {`${speed} м/с`}\r\n        </div>\r\n        <div className={\"weather-sheet__props-item\"}>\r\n          <Cloud />\r\n          {`${clouds}%`}\r\n        </div>\r\n        <div className={\"weather-sheet__props-item\"}>\r\n          <Drop />\r\n          {`${pop}%`}\r\n        </div>\r\n      </div>\r\n      <hr className={\"weather-sheet__spacer\"} />\r\n      <div className={\"weather-sheet__hourly\"}>{`${moment(dt_txt).format(\"HH:mm\")} — ${Number(moment(dt_txt).format(\"HH\")) + 3\r\n        }:00`}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeatherSheetItem","import React, { useContext } from \"react\"\r\nimport moment from \"moment\"\r\n\r\nimport \"./NoForecast.css\"\r\nimport calendar from \"../../assets/calendar.png\"\r\n\r\nimport { DateContext } from \"../../context\"\r\n\r\nconst NoForecast: React.FC = () => {\r\n    const date = useContext<Date>(DateContext);\r\n\r\n    return (\r\n    <div className={\"no-forecast\"}>\r\n        <h2>{`На ${moment(date).format(\"L\")} прогноз отсутствует`}</h2>\r\n        <img src={calendar} alt={\"Изображение календаря\"} />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NoForecast","import React, { useContext } from \"react\";\r\nimport WeatherSheetItem from \"../WeatherSheetItem\"\r\nimport NoForecast from \"../NoForecast\"\r\nimport { get } from \"lodash\"\r\nimport moment from \"moment\"\r\n\r\nimport { IWeatherSheetProps, IWeatherForDay } from \"../../interfaces\"\r\nimport \"./WeatherSheet.css\";\r\n\r\nimport { DateContext } from \"../../context\"\r\n\r\nconst WeatherSheet: React.FC<IWeatherSheetProps> = props => {\r\n  const weatherForDay: Array<IWeatherForDay> = get(props, \"weatherForDay\", [])\r\n  const date = useContext<Date>(DateContext);\r\n\r\n  return (\r\n    weatherForDay.length ?\r\n      (\r\n        <section className={\"weather-sheet\"}>\r\n          <h2>{`Погода на ${moment(date).format(\"L\")}`}</h2>\r\n          {weatherForDay.map((item) => <WeatherSheetItem data={item} key={item.dt} />)}\r\n        </section>\r\n      ) : <NoForecast />\r\n  )\r\n}\r\n\r\nexport default WeatherSheet;\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport DatePicker from \"react-horizontal-datepicker\";\r\nimport moment from \"moment\";\r\nimport { get } from \"lodash\"\r\n\r\nimport \"./App.css\";\r\n\r\nimport { DateContext } from \"./context\"\r\nimport Spin from \"./components/Spin\"\r\nimport WeatherSheet from \"./components/WeatherSheet\"\r\n\r\nimport { IWeatherForDay } from \"./interfaces\"\r\n\r\nconst App: React.FC = () => {\r\n  const [city, setCity] = useState<string>(\"\");\r\n  const [time, setTime] = useState<string>(moment().format(\"HH:mm\"));\r\n  const [weatherForDay, setWeatherForDay] = useState<Array<IWeatherForDay>>([]);\r\n  const [currentDate, securrentDate] = useState<Date>(new Date());\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  const url =\r\n    \"//api.openweathermap.org/data/2.5/forecast?q=Kazan&lang=ru&units=metric&appid=c4421a76df1ebaf51fc8f1042a0fd8de\";\r\n\r\n  const selectedDay = (value: Date): void => securrentDate(value)\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setTime(moment().format(\"HH:mm\"))\r\n    }, 1000)\r\n  }, [time])\r\n\r\n  useLayoutEffect(() => {\r\n    const getWather = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const weather = await fetch(url);\r\n\r\n        if (weather.ok) {\r\n          const { list, city } = await weather.json();\r\n\r\n          const temperatureForDay = list.filter((item) => {\r\n            const date = new Date(get(item, \"dt_txt\", \"\"));\r\n            if (moment(currentDate).format(\"YYYY-MM-DD\") === moment(date).format(\"YYYY-MM-DD\")) {\r\n              return item\r\n            }\r\n          });\r\n\r\n          setCity(get(city, \"name\", \"\"))\r\n          setWeatherForDay([...temperatureForDay])\r\n          setLoading(false)\r\n        }\r\n      } catch (e) {\r\n        setLoading(false)\r\n      }\r\n\r\n    };\r\n\r\n    getWather();\r\n  }, [currentDate]);\r\n\r\n  return (\r\n    <DateContext.Provider value={currentDate}>\r\n      <div className=\"App\">\r\n        <h1>Погода {city}</h1>\r\n        <div>Сейчас {time}</div>\r\n        <div style={{ maxWidth: \"340px\", margin: \"20px auto 0\" }}>\r\n          <DatePicker className={\"datepicker\"} getSelectedDay={selectedDay} selectDate={currentDate} labelFormat={\"MMMM yyyy\"} endDate={1001} color={\"rgb(0, 0, 0)\"} />\r\n        </div>\r\n        {loading ? <Spin /> : <WeatherSheet weatherForDay={weatherForDay} />}\r\n      </div>\r\n    </DateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}